generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Device {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  pin                    String                   @unique
  isActive               Boolean
  questionnaires         Questionnaire[]
  QuestionnaireOnDevices QuestionnaireOnDevices[]

  @@map("devices")
}

model Applier {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  isActive               Boolean
  questionnaires         Questionnaire[]
  QuestionnaireOnApplier QuestionnaireOnApplier[]

  @@map("appliers")
}

model User {
  id              String  @id @default(uuid())
  login           String  @unique
  password        String
  name            String
  token           String
  tokenExpiration Int
  isActive        Boolean

  @@map("users")
}

model Questionnaire {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  image                  String
  quantity               Int
  endDate                String
  link                   String
  exceedsQuantity        Boolean
  canBeOnline            Boolean
  isActive               Boolean
  devices                Device[]
  appliers               Applier[]
  QuestionnaireOnDevices QuestionnaireOnDevices[]
  QuestionnaireOnApplier QuestionnaireOnApplier[]
  Question               Question[]

  @@map("questionnaires")
}

model QuestionnaireOnDevices {
  device          Device        @relation(fields: [deviceId], references: [id])
  deviceId        String
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  questionnaireId String
  assignedAt      DateTime      @default(now())
  assignedBy      String

  @@id([deviceId, questionnaireId])
}

model QuestionnaireOnApplier {
  applier         Applier       @relation(fields: [applierId], references: [id])
  applierId       String
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  questionnaireId String
  assignedAt      DateTime      @default(now())
  assignedBy      String

  @@id([applierId, questionnaireId])
}

model Question {
  id                    String  @id @default(uuid())
  idQuestionnaire       String
  title                 String
  variable              String
  type                  String
  minAnswers            Int
  maxAnswers            Int
  defaultValue          String
  shuffle               Boolean
  prioritizeBySelection Boolean
  isActive              Boolean

  questionnaire Questionnaire @relation(references: [id], fields: [idQuestionnaire])

  @@map("questions")
}
