generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Device {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  pin                    String                   @unique
  isActive               Boolean
  questionnaires         Questionnaire[]
  QuestionnaireOnDevices QuestionnaireOnDevices[]
  QuestionnaireData      QuestionnaireData[]

  @@map("devices")
}

model Applier {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  isActive               Boolean
  questionnaires         Questionnaire[]
  QuestionnaireOnApplier QuestionnaireOnApplier[]
  QuestionnaireData      QuestionnaireData[]

  @@map("appliers")
}

model User {
  id              String  @id @default(uuid())
  login           String  @unique
  password        String
  name            String
  token           String
  tokenExpiration BigInt
  isActive        Boolean

  @@map("users")
}

model Questionnaire {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  image                  String
  quantity               Int
  endDate                String
  link                   String
  exceedsQuantity        Boolean
  canBeOnline            Boolean
  isActive               Boolean
  devices                Device[]
  appliers               Applier[]
  QuestionnaireOnDevices QuestionnaireOnDevices[]
  QuestionnaireOnApplier QuestionnaireOnApplier[]
  Question               Question[]
  QuestionnaireData      QuestionnaireData[]

  @@map("questionnaires")
}

model QuestionnaireOnDevices {
  device          Device        @relation(fields: [deviceId], references: [id])
  deviceId        String
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  questionnaireId String
  assignedAt      DateTime      @default(now())
  assignedBy      String

  @@id([deviceId, questionnaireId])
}

model QuestionnaireOnApplier {
  applier         Applier       @relation(fields: [applierId], references: [id])
  applierId       String
  questionnaire   Questionnaire @relation(fields: [questionnaireId], references: [id])
  questionnaireId String
  assignedAt      DateTime      @default(now())
  assignedBy      String

  @@id([applierId, questionnaireId])
}

model Question {
  id                    String  @id @default(uuid())
  idQuestionnaire       String
  title                 String
  variable              String
  type                  String
  minAnswers            Int
  maxAnswers            Int
  defaultValue          String
  shuffle               Boolean
  prioritizeBySelection Boolean
  isActive              Boolean

  questionnaire Questionnaire  @relation(references: [id], fields: [idQuestionnaire])
  answerOptions AnswerOption[]
  Answer        Answer[]

  @@map("questions")
}

model AnswerOption {
  id         String  @id @default(uuid())
  idQuestion String
  title      String
  status     Boolean
  isActive   Boolean

  question Question @relation(references: [id], fields: [idQuestion])
  Answer   Answer[]

  @@map("answer_options")
}

model QuestionnaireData {
  id              String  @id @default(uuid())
  idQuestionnaire String
  idApplier       String
  idDevice        String
  audioPath       String
  lat             String
  lon             String
  duration        Int
  isActive        Boolean
  createdAt      DateTime      @default(now())

  questionnaire Questionnaire @relation(references: [id], fields: [idQuestionnaire])
  applier       Applier       @relation(references: [id], fields: [idApplier])
  device        Device        @relation(references: [id], fields: [idDevice])
  Answer        Answer[]

  @@map("questionnaire_datas")
}

model Answer {
  id                  String  @id @default(uuid())
  idQuestionnaireData String
  idQuestion          String
  idAnswerOption      String?
  value               String
  duration            Int
  createdAt           String
  isActive            Boolean

  questionnaireData QuestionnaireData @relation(references: [id], fields: [idQuestionnaireData])
  question          Question          @relation(references: [id], fields: [idQuestion])
  answerOption      AnswerOption?      @relation(references: [id], fields: [idAnswerOption])

  @@map("answers")
}
